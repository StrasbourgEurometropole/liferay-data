<?xml version="1.0"?>
<workflow-definition xmlns="urn:liferay.com:liferay-workflow_7.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:liferay.com:liferay-workflow_7.0.0 http://www.liferay.com/dtd/liferay-workflow-definition_7_0_0.xsd">
	<name>Single Approver Notification</name>
	<description>A single approver can approve a workflow content.</description>
	<version>1</version>
	<condition>
		<name>determine-branch</name>
		<metadata><![CDATA[{"xy":[219,285]}]]></metadata>
		<script><![CDATA[
				import com.liferay.portal.kernel.model.Group;
				import com.liferay.portal.kernel.model.Role;
				import com.liferay.portal.kernel.service.UserGroupRoleLocalServiceUtil;
				import com.liferay.portal.kernel.service.GroupLocalServiceUtil;
				import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
				import com.liferay.portal.kernel.util.GetterUtil;
				import com.liferay.portal.kernel.workflow.WorkflowConstants;
				import eu.strasbourg.service.notif.service.NotificationLocalServiceUtil;
				import eu.strasbourg.service.notif.model.Notification;
						
				long companyId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
				long groupId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_GROUP_ID));

				long notificationId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));
				Notification notification = NotificationLocalServiceUtil.fetchNotification(notificationId);

				Role contributorNotification = RoleLocalServiceUtil.getRole(companyId, "Contributeur notification");
				Role responsableNotification = RoleLocalServiceUtil.getRole(companyId, "Responsable notification");
				Role administratorNotification = RoleLocalServiceUtil.getRole(companyId, "Administrateur notification");
				Role administrator = RoleLocalServiceUtil.getRole(companyId, "Administrator");
				

				returnValue = "review";
				
				if(
					RoleLocalServiceUtil.hasUserRole(notification.getStatusByUserId() , administrator.getRoleId())
					|| UserGroupRoleLocalServiceUtil.hasUserGroupRole(notification.getStatusByUserId() , groupId, administratorNotification.getRoleId())
					|| UserGroupRoleLocalServiceUtil.hasUserGroupRole(notification.getStatusByUserId() , groupId, responsableNotification.getRoleId())
					|| (UserGroupRoleLocalServiceUtil.hasUserGroupRole(notification.getStatusByUserId() , groupId, contributorNotification.getRoleId())
						&& notification.messageId != 0)
				) {
					returnValue = "approve";
				}				

				return;
				
			]]></script>
		<script-language>groovy</script-language>
		<transitions>
			<transition>
				<name>review</name>
				<target>review</target>
				<default>true</default>
			</transition>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>false</default>
			</transition>
		</transitions>
	</condition>
	<state>
		<name>created</name>
		<metadata><![CDATA[{"xy":[27,296]}]]></metadata>
		<initial>true</initial>
		<transitions>
			<transition>
				<name>Determine Branch</name>
				<target>determine-branch</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>approved</name>
		<metadata><![CDATA[{"xy":[222,81]}]]></metadata>
		<actions>
			<action>
				<name>approve</name>
				<script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("approved"), workflowContext);]]></script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Approve Notification User</name>
				<description><![CDATA[Envoi une notification d'acceptation de soumission à l'utilisateur]]></description>
				<template><![CDATA[Votre soumission de notification a été acceptée.]]></template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user/>
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
	</state>
	<state>
		<name>rejected</name>
		<metadata><![CDATA[{"xy":[631,307]}]]></metadata>
		<actions>
			<action>
				<name>reject</name>
				<description></description>
				<script><![CDATA[import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.getLabelStatus("denied"), workflowContext);]]></script>
				<script-language>groovy</script-language>
				<execution-type>onEntry</execution-type>
			</action>
			<notification>
				<name>Reject Notification User</name>
				<description><![CDATA[Envoi une notification de rejet de soumission à l'utilisateur]]></description>
				<template><![CDATA[Votre soumission de notification a été rejetée
					<#if taskComments?has_content> et le validateur a émis le commentaire suivant : ${taskComments}</#if>.
					Veuillez la modifier et la soumettre à nouveau.]]></template>
				<template-language>freemarker</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<user/>
				</recipients>
				<execution-type>onEntry</execution-type>
			</notification>
		</actions>
	</state>
	<task>
		<name>review</name>
		<metadata><![CDATA[{"xy":[574,50]}]]></metadata>
		<actions>
			<notification>
				<name>Assignment Notification </name>
				<description><![CDATA[Envoi une notification d'assignement aux validateurs]]></description>
				<template><![CDATA[Vous avez une nouvelle soumission de notification.]]></template>
				<template-language>text</template-language>
				<notification-type>user-notification</notification-type>
				<recipients receptionType="to">
					<assignees/>
				</recipients>
				<execution-type>onAssignment</execution-type>
			</notification>
		</actions>
		<assignments>
			<scripted-assignment>
				<script><![CDATA[
					import java.util.ArrayList;
					import com.liferay.portal.kernel.util.GetterUtil;
					import com.liferay.portal.kernel.workflow.WorkflowConstants;
					import com.liferay.portal.kernel.model.Role;
					import com.liferay.portal.kernel.service.RoleLocalServiceUtil;
					import eu.strasbourg.service.notif.model.Notification;
					import eu.strasbourg.service.notif.service.NotificationLocalServiceUtil;
					import eu.strasbourg.service.notif.model.ServiceNotif;
					import eu.strasbourg.service.notif.service.ServiceNotifLocalServiceUtil;
					import com.liferay.portal.kernel.model.Organization;
					import com.liferay.portal.kernel.service.OrganizationLocalServiceUtil;

					roles = new ArrayList<>();

					long companyId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_COMPANY_ID));
					long groupId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_GROUP_ID));
					
					Role administratorNotification = RoleLocalServiceUtil.getRole(companyId, "Administrateur notification");
					roles.add(administratorNotification);
					
					long notificationId = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));
					Notification notification = NotificationLocalServiceUtil.fetchNotification(notificationId);
					long serviceNotifId = notification.getServiceId();
					ServiceNotif service = ServiceNotifLocalServiceUtil.fetchServiceNotif(serviceNotifId);
					long organizationId = service.getOrganisationId();
					Organization organization = OrganizationLocalServiceUtil.fetchOrganization(organizationId);
					String roleName = "Notification - " +  organization.getName();
					Role responsableNotification = RoleLocalServiceUtil.getRole(companyId, roleName);
					roles.add(responsableNotification);

					user = null;
				]]></script>
				<script-language>groovy</script-language>
			</scripted-assignment>
		</assignments>
		<transitions>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<name>reject</name>
				<target>rejected</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
</workflow-definition>
